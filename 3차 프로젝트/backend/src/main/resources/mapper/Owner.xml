<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fs.human.yabab.Owner.dao.OwnerDAO">

    <!-- 특정 ownerId로 레스토랑 정보 조회 -->
    <select id="findRestaurantByOwnerId" parameterType="String" resultType="fs.human.yabab.Owner.vo.OwnerDTO">
        SELECT
        r.RESTAURANT_ID AS id,
        r.OWNER_ID AS ownerId,
        r.RESTAURANT_NAME AS restaurantName,
        r.RESTAURANT_IMAGE_PATH AS restaurantImagePath,
        r.RESTAURANT_IMAGE_NAME AS restaurantImageName,
        s.STADIUM_NAME AS stadiumName,
        r.RESTAURANT_INSIDE_FLAG AS restaurantInsideFlag,

        r.RESTAURANT_LOCATION AS restaurantLocation,
        r.RESTAURANT_ADDR1 AS restaurantAddr1,
        r.RESTAURANT_ADDR2 AS restaurantAddr2,

        z.ZONE_NAME AS zoneName,

        r.RESTAURANT_TEL AS restaurantPhone,
        r.RESTAURANT_OPEN_TIME AS restaurantOpenTime,
        r.RESTAURANT_LAST_ORDER AS restaurantLastOrder,
        r.RESTAURANT_BREAK_TIME AS restaurantBreakTime,
        r.RESTAURANT_REST_DAY AS restaurantRestDay,
        r.RESTAURANT_RESV_STATUS AS restaurantResvStatus
        FROM
        TB_RESTAURANT r
        LEFT JOIN
        TB_STADIUM s ON r.STADIUM_ID = s.STADIUM_ID
        LEFT JOIN
        TB_ZONE z ON r.ZONE_ID = z.ZONE_ID AND r.STADIUM_ID = z.STADIUM_ID
        WHERE
        r.OWNER_ID = #{ownerId}
    </select>

    <!-- 특정 restaurantId로 레스토랑 정보 조회 -->
    <select id="findRestaurantById" parameterType="java.lang.Long" resultType="fs.human.yabab.Owner.vo.OwnerDTO">
        SELECT
        r.RESTAURANT_ID AS id,
        r.OWNER_ID AS ownerId,
        r.RESTAURANT_NAME AS restaurantName,
        r.RESTAURANT_IMAGE_PATH AS restaurantImagePath,
        r.RESTAURANT_IMAGE_NAME AS restaurantImageName,
        s.STADIUM_NAME AS stadiumName,
        r.RESTAURANT_LOCATION AS restaurantLocation,
        z.ZONE_NAME AS zoneName,
        r.RESTAURANT_ADDR1 AS restaurantAddr1,
        r.RESTAURANT_ADDR2 AS restaurantAddr2,
        r.RESTAURANT_INSIDE_FLAG AS restaurantInsideFlag,
        r.RESTAURANT_TEL AS restaurantPhone,
        r.RESTAURANT_OPEN_TIME AS restaurantOpenTime,
        r.RESTAURANT_LAST_ORDER AS restaurantLastOrder,
        r.RESTAURANT_BREAK_TIME AS restaurantBreakTime,
        r.RESTAURANT_REST_DAY AS restaurantRestDay,
        r.RESTAURANT_RESV_STATUS AS restaurantResvStatus
        FROM
        TB_RESTAURANT r
        LEFT JOIN TB_STADIUM s ON r.STADIUM_ID = s.STADIUM_ID
        LEFT JOIN TB_ZONE z ON r.ZONE_ID = z.ZONE_ID AND r.STADIUM_ID = z.STADIUM_ID
        WHERE r.RESTAURANT_ID = #{id}
    </select>

    <!-- 모든 구장 이름과 ID 조회 -->
    <select id="selectAllStadiumNamesAndIds" resultType="fs.human.yabab.Owner.vo.OwnerDTO">
        SELECT
        STADIUM_ID AS id,
        STADIUM_NAME AS stadiumName
        FROM
        TB_STADIUM
    </select>

    <!-- 특정 구장의 구역 조회 -->
    <select id="getZonesByStadiumId" resultType="fs.human.yabab.Owner.vo.OwnerDTO">
        SELECT
        ZONE_ID AS id,
        ZONE_NAME AS zoneName
        FROM
        TB_ZONE
        WHERE
        STADIUM_ID = #{stadiumId}
        ORDER BY ZONE_NAME
    </select>

    <!-- 식당 정보 업데이트 -->
    <update id="updateRestaurant" parameterType="fs.human.yabab.Owner.vo.OwnerDTO">
        UPDATE TB_RESTAURANT
        SET
        RESTAURANT_NAME = #{restaurantName},
        STADIUM_ID = (SELECT STADIUM_ID FROM TB_STADIUM WHERE STADIUM_NAME = #{stadiumName}),
        RESTAURANT_RESV_STATUS = #{restaurantResvStatus},
        RESTAURANT_INSIDE_FLAG = 0,
        RESTAURANT_IMAGE_PATH = #{restaurantImagePath},
        RESTAURANT_IMAGE_NAME = #{restaurantImageName},
        UPDATED_DATE = SYSDATE,
        ZONE_ID = (
        SELECT ZONE_ID FROM TB_ZONE
        WHERE ZONE_NAME = #{zoneName}
        AND STADIUM_ID = (SELECT STADIUM_ID FROM TB_STADIUM WHERE STADIUM_NAME = #{stadiumName})
        ),
        RESTAURANT_LOCATION = #{restaurantLocation, jdbcType=VARCHAR},
        RESTAURANT_TEL = NULL,
        RESTAURANT_OPEN_TIME = NULL,
        RESTAURANT_LAST_ORDER = NULL,
        RESTAURANT_BREAK_TIME = NULL,
        RESTAURANT_REST_DAY = NULL,
        RESTAURANT_ADDR1 = NULL,
        RESTAURANT_ADDR2 = NULL
        WHERE RESTAURANT_ID = #{id}
    </update>

    <select id="findMenusByRestaurantId" parameterType="java.lang.Long" resultType="fs.human.yabab.Owner.vo.Owner_MenuDTO">
        SELECT
        MENU_ID AS menuId,
        RESTAURANT_ID AS restaurantId,
        MENU_NAME AS menuName,
        MENU_PRICE AS menuPrice,
        CREATED_DATE AS createdDate,
        CREATED_BY AS createdBy,
        UPDATED_DATE AS updatedDate,
        UPDATED_BY AS updatedBy
        FROM TB_MENU WHERE RESTAURANT_ID = #{restaurantId}
        ORDER BY MENU_ID ASC
    </select>

    <insert id="insertMenu" parameterType="fs.human.yabab.Owner.vo.Owner_MenuDTO">
        INSERT INTO TB_MENU (
        MENU_ID,       RESTAURANT_ID,
        MENU_NAME,
        MENU_PRICE,
        CREATED_DATE,
        CREATED_BY
        ) VALUES (
        MENU_SEQ.NEXTVAL, <!-- ⭐ 수정된 부분: 1 대신 시퀀스 호출 ⭐ -->
        #{restaurantId},
        #{menuName},
        #{menuPrice},
        SYSDATE,
        #{createdBy}
        )
    </insert>

    <update id="updateMenu" parameterType="fs.human.yabab.Owner.vo.Owner_MenuDTO">
        UPDATE TB_MENU SET
        MENU_NAME = #{menuName},
        MENU_PRICE = #{menuPrice},
        UPDATED_DATE = SYSDATE,
        UPDATED_BY = #{updatedBy} WHERE MENU_ID = #{menuId}
    </update>

    <delete id="deleteMenu" parameterType="java.lang.Long">
        DELETE FROM TB_MENU WHERE MENU_ID = #{menuId}
    </delete>

    <select id="findMenuById" parameterType="java.lang.Long" resultType="fs.human.yabab.Owner.vo.Owner_MenuDTO">
        SELECT
        MENU_ID AS menuId,
        RESTAURANT_ID AS restaurantId,
        MENU_NAME AS menuName,
        MENU_PRICE AS menuPrice
        -- CREATED_DATE, CREATED_BY, UPDATED_DATE, UPDATED_BY는 필요에 따라 추가
        FROM TB_MENU WHERE MENU_ID = #{menuId}
    </select>
</mapper>